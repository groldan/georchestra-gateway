@startuml config-model
!theme plain
skinparam classAttributeIconSize 0
skinparam linetype ortho
skinparam nodesep 85
skinparam ranksep 55

class GatewayConfigProperties {
  +Map<String, List<String>> rolesMappings
  +HeaderMappings defaultHeaders
  +List<RoleBasedAccessRule> globalAccessRules
  +Map<String, Service> services
}

class Service {
  +URI target
  +HeaderMappings headers
  +List<RoleBasedAccessRule> accessRules
}

class HeaderMappings {
  +Optional<Boolean> proxy
  +Optional<Boolean> userid
  +Optional<Boolean> username
  +Optional<Boolean> roles
  +Optional<Boolean> org
  +Optional<Boolean> email
  +Optional<Boolean> firstname
  +Optional<Boolean> lastname
  +Optional<Boolean> jsonUser
  +Optional<Boolean> orgname
  +Optional<Boolean> orgid
  +Optional<Boolean> jsonOrganization
}

class RoleBasedAccessRule {
  +List<String> interceptUrl
  +boolean forbidden
  +boolean anonymous
  +List<String> allowedRoles
}

class AccessLogFilterConfig {
  +boolean enabled
  +List<Pattern> trace
  +List<Pattern> debug
  +List<Pattern> info
}

class HttpRequestMdcConfigProperties {
  +boolean id
  +boolean remoteAddr
  +boolean remoteHost
  +boolean method
  +boolean url
  +boolean parameters
  +boolean queryString
  +boolean sessionId
  +boolean cookies
  +boolean headers
  +Pattern headersPattern
}

class AuthenticationMdcConfigProperties {
  +boolean id
  +boolean roles
  +boolean org
  +boolean authMethod
}

GatewayConfigProperties "1" *-- "1" HeaderMappings : defaultHeaders
GatewayConfigProperties "1" *-- "*" RoleBasedAccessRule : globalAccessRules
GatewayConfigProperties "1" *-- "*" Service : services
Service "1" *-- "0..1" HeaderMappings : headers
Service "1" *-- "*" RoleBasedAccessRule : accessRules

@enduml